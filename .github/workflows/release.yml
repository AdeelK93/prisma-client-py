name: Release
# TODO: on: workflow_dispatch
on:
  push:
    branches:
      - main
  pull_request:
    # TODO: this should run for every pr
    branches:
      - main
      - feat/rust-bindings
      - ci/rust-wheels
jobs:
  build-query-engine:
    name: Build Query Engine py3${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["6", "7", "8", "9", "10"]
        os: [ubuntu-20.04, windows-2019, macos-10.15]
    env:
      # TODO: run tests on the built wheels
      CIBW_BUILD: "cp3${{ matrix.python-version }}-*"
      CIBW_BUILD_VERBOSITY: 1
      CIBW_BEFORE_ALL_LINUX: "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y && yum install -y openssl-devel"
      CIBW_BEFORE_BUILD_LINUX: "cargo build"
      # TODO: CIBW_ARCHS_LINUX: "auto aarch64"
      CIBW_ARCHS_LINUX: "auto"
      # TODO: support m1 mac
      # CIBW_ARCHS_MACOS: "x86_64 arm64"
      CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin"'
      # TODO: verify this
      CIBW_SKIP: "cp27-* cp34-* cp35-* pp* *-win32"

    # TODO: run rust lints and tests
    # TODO: rename this file to query-engine.yml

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      # TODO: maturin verbosity? there seems to be a lot of time spent in prepare_metadata_for_build_wheel

      # TODO: this previously had: if: runner.os != 'Linux'
      - name: Setup env
        run: |
          python -m pip install --upgrade wheel setuptools maturin

      # TODO: switch back to using cibuildwheel, try and see if rust dependencies
      # can be cached as that would significantly reduce compile time

      - if: runner.os == 'Linux'
        name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      # TODO: switch back to using action and verify the comment
      - name: Install cibuildwheel
        run: |
          # Install cibuildwheel from git for CIBW_ARCHS_LINUX support
          # python -m pip install git+https://github.com/joerick/cibuildwheel@6f28d7851fa3380e8188a12d710bcae4ff233314
          python -m pip install -U cibuildwheel==2.3.0

      - name: Build wheels
        working-directory: src/query-engine
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          path: ./src/query-engine/wheelhouse/*.whl

  release-query-engine:
    needs: build-query-engine
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - uses: actions/download-artifact@v2
        with:
          path: wheelhouse

      - uses: actions/download-artifact@v2
        with:
          path: wheelhouse

      - name: Test 1
        run: |
          ls -a -R wheelhouse

      - name: Test 2
        run: |
          ls -a -R .

      - name: Upload Wheels
        env:
          TWINE_USERNAME: ${{ secrets.TESTPYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TESTPYPI_PASSWORD }}
        run: |
          twine upload -r testpypi wheelhouse/*
