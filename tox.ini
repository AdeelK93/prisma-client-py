[tox]
envlist =
    setup,
    lint,
    py36,
    py37,
    py38,
    py39,
    typesafety,
    report,

skip_missing_interpreters = true
toxworkdir = /tmp/tox/prisma-client-py


[testenv]
extras =
   aiohttp
   requests

deps =
    pytest==6.1.2
    pytest-asyncio==0.14.0
    coverage==5.3.1

setenv =
    PRISMA_PY_DEBUG = 1
    PRISMA_PY_OUTPUT = {envsitepackagesdir}/prisma
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}{:}.coverage.{envname}}

passenv =
    DEBUG
    PYTHONPATH
    PRISMA_PY_DEBUG_GENERATOR

commands_pre =
    python tests/cleanup.py
    coverage run -m prisma generate --schema=tests/data/schema.prisma
    coverage run -m prisma generate --schema=tests/data/tests.schema.prisma

commands =
    coverage run -m pytest {posargs}

commands_post =
    python tests/cleanup.py


[testenv:typesafety]
deps =
    {[testenv]deps}
    pytest-mypy-plugins==1.6.1

commands =
    pytest --mypy-ini-file=tests/data/mypy.ini {posargs:typesafety}


[testenv:setup]
skip_install = True

deps =
    coverage==5.3.1

setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}{:}.coverage.{envname}}

# override the default
commands_pre =
    python -c 'import sys; sys.exit(0);'

commands =
    coverage erase

commands_post =
    python -c 'import sys; sys.exit(0);'

[testenv:lint]
# run every command even if one of them fails
ignore_errors = true

deps =
    black==20.8b1
    pylint==2.6.0
    mypy==0.790
    pytest==6.1.2
    pytest-asyncio==0.14.0
    coverage==5.3.1

commands =
    pylint prisma tests
    black --check .
    coverage run -m mypy --show-traceback prisma tests


[testenv:report]
skip_install = true
deps =
    coverage==5.3.1

setenv =
    COVERAGE_FILE={toxworkdir}{:}.coverage

# override the default
commands_pre =
    python -c 'import sys; sys.exit(0);'

commands_post =
    python -c 'import sys; sys.exit(0);'

commands =
    coverage combine
    coverage html -i
    coverage xml -i
    coverage report -i


[coverage:run]
concurrency = multiprocessing
include =
    tests/*
    prisma/*

omit =
    .prisma/partials.py


[coverage:report]
exclude_lines =
    pragma: no cover
    mark: filedef
    @pytest.mark.skip\(?

[coverage:paths]
prisma =
    prisma
    */**/prisma
